name: "Deploy to k8s"
run-name: ${{ github.actor }} try to deploy ti k8s-gcloud

on:
  push:
    branches: [ dev, prod ]

jobs:
  setup-secrets:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Update values.yaml
        uses: fjogeleit/yaml-update-action@main
        env:
          DICTIONARY_URL: ${{ secrets.DICTIONARY_URL }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_USER_PASS: ${{ secrets.DB_USER_PASS }}
        with:
          valueFile: 'src/main/resources/application.yml'
          propertyPath: 'spring.datasource.url'
          commitChange: false
          branch: dev
          changes: |
            {
              "spring.datasource.url": $DICTIONARY_URL
              "spring.datasource.username": $DB_USER
              "spring.datasource.password": $DB_USER_PASS
            }

#      - name: test setup secrets
#        env:
#          DICTIONARY_URL: ${{ secrets.DICTIONARY_URL }}
#          DB_USER: ${{ secrets.DB_USER }}
#          DB_USER_PASS: ${{ secrets.DB_USER_PASS }}
#        run: |
#          cd src/main/resources/
#          sed -i "s|DICTIONARY_URL|$DICTIONARY_URL|g" application.yml
#          sed -i "s|DB_USER|$DB_USER|g" application.yml
#          sed -i "s|DB_USER_PASS|$DB_USER_PASS|g" application.yml

#  deploy:
#    needs: [ setup-secrets ]
#    runs-on: ubuntu-latest
#    steps:
#      - name: checkout before deploy
#        uses: actions/checkout@v3
#
#  #Please switch to using google-github-actions/auth which supports both Workload Identity Federation
#  #and Service Account Key JSON authentication.
#      - name: install gcloud cli
#        uses: google-github-actions/setup-gcloud@v0
#        with:
#          project_id: ${{ secrets.GOOGLE_PROJECT }}
#          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
#          install_components: 'gke-gcloud-auth-plugin'
#          export_default_credentials: true
#
#      - name: build and push the docker image
#        env:
#          GOOGLE_PROJECT: ${{ secrets.GOOGLE_PROJECT }}
#        run: |
#          gcloud auth configure-docker us-central1-docker.pkg.dev
#          docker build -t us-central1-docker.pkg.dev/$GOOGLE_PROJECT/translator/anki:1.0.2 .
#          docker push us-central1-docker.pkg.dev/$GOOGLE_PROJECT/translator/anki:1.0.2
#
#      - name: deploy to gke
#        env:
#          GOOGLE_PROJECT: ${{ secrets.GOOGLE_PROJECT }}
#        run: |
#          gcloud container clusters get-credentials translator-cluster --region us-central1
#          sed -i "s/GOOGLE_PROJECT/$GOOGLE_PROJECT/g" k8s-resources.yaml
#          kubectl apply -f k8s-resources.yaml
